#include <bits/stdc++.h>
using namespace std;
const int INF = 0x3f3f3f3f;
const int MAX = 1000+10;
string a, b;
int DP[MAX][MAX];
int dp(int l, int r){
	if(DP[l][r] != -1) return DP[l][r];
	if(l == r) return DP[l][r] = 1;
	if(l+1 == r){
		return DP[l][r] = a[l] == a[r] ? 2 : 1;
	}
	if(a[l] == a[r]) return DP[l][r] = 2 + dp(l+1, r-1);
	return DP[l][r] = max(dp(l, r-1), dp(l+1, r));
}
int main(){
	int n;
	cin >> n;
	getchar();
	for(int i = 0; i < n; i++){
		getline(cin, a);
		if(a.size() == 0){printf("0\n"); continue;}
		memset(DP, -1, sizeof DP);
		printf("%d\n", dp(0, a.size()-1));
	}
}